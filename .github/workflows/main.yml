name: test

on: [push]

jobs:
  compile_and_test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        tutorial: ['EX2_Dahlquist', 'EX3_adv_diff']
        mpi: ['mpich', 'openmpi']
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Setup mpich
        if: matrix.mpi == 'mpich'
        run: |
          sudo apt-get -y install mpich
          mpirun --version
      - name: Setup openmpi
        if: matrix.mpi == 'openmpi'
        run: |
          sudo apt-get -y install openmpi-bin openmpi-doc libopenmpi-dev
          mpirun --version
      - name: Compile
        run: |
          mkdir build && cd build
          cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
          make ${{ matrix.tutorial }}
      - name: Run sequential
        run: ./tests/run_example.sh ${{ matrix.tutorial }}
      - name: Run parallel
        run: ./tests/run_example.sh -n 4 ${{ matrix.tutorial }}
      - name: Test sequential
        run: |
          make -C LibPFASST/Tutorials/${{ matrix.tutorial }}
          ./tests/test_example.sh ${{ matrix.tutorial }}

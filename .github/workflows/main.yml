name: Test cpfasst

on: [push]

jobs:
  compile_and_test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        tutorial: ['EX2_Dahlquist', 'EX3_adv_diff']
        mpi: ['mpich', 'openmpi']
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Setup MPI (mpich)
        if: matrix.mpi == 'mpich'
        run: sudo apt-get -y install mpich
      - name: Setup MPI (OpenMPI)
        if: matrix.mpi == 'openmpi'
        run: sudo apt-get -y install openmpi-bin openmpi-doc libopenmpi-dev
      - name: Print versions
        run: |
          python3 --version
          mpiexec --version
          mpicc -v
      - name: Compile cpfasst example
        run: (cd examples/${{ matrix.tutorial }} && make V=1 GCC10=FALSE MPI=${{ matrix.mpi }})
      - name: Compile LibPFASST tutorials
        run: make V=1 GCC10=FALSE MPI=${{ matrix.mpi }} libpfasst_examples
      - name: Test sequential
        run: ./tests/test_and_run.py ${{ matrix.tutorial }}
      - name: Test parallel (mpich)
        if: matrix.mpi == 'mpich'
        run: ./tests/test_and_run.py --np 4 ${{ matrix.tutorial }}
      - name: Test parallel (OpenMPI)
        if: matrix.mpi == 'openmpi'
        run: ./tests/test_and_run.py --np 4 ${{ matrix.tutorial }} --mpiargs="--oversubscribe"
